{"remainingRequest":"/Users/irinas/TodoList/node_modules/babel-loader/lib/index.js!/Users/irinas/TodoList/node_modules/vuetify/lib/mixins/colorable/index.js","dependencies":[{"path":"/Users/irinas/TodoList/node_modules/vuetify/lib/mixins/colorable/index.js","mtime":1646990995832},{"path":"/Users/irinas/TodoList/babel.config.js","mtime":1646991547366},{"path":"/Users/irinas/TodoList/node_modules/cache-loader/dist/cjs.js","mtime":1646990993054},{"path":"/Users/irinas/TodoList/node_modules/babel-loader/lib/index.js","mtime":1646990994703}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/irinas/TodoList/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/irinas/TodoList/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Vue from 'vue';\nimport { consoleError } from \"../../util/console\";\nimport { isCssColor } from \"../../util/colorUtils\";\nexport default Vue.extend({\n  name: 'colorable',\n  props: {\n    color: String\n  },\n  methods: {\n    setBackgroundColor: function setBackgroundColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = _objectSpread(_objectSpread({}, data.style), {}, {\n          'background-color': \"\".concat(color),\n          'border-color': \"\".concat(color)\n        });\n      } else if (color) {\n        data.class = _objectSpread(_objectSpread({}, data.class), {}, _defineProperty({}, color, true));\n      }\n\n      return data;\n    },\n    setTextColor: function setTextColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (isCssColor(color)) {\n        data.style = _objectSpread(_objectSpread({}, data.style), {}, {\n          color: \"\".concat(color),\n          'caret-color': \"\".concat(color)\n        });\n      } else if (color) {\n        var _color$toString$trim$ = color.toString().trim().split(' ', 2),\n            _color$toString$trim$2 = _slicedToArray(_color$toString$trim$, 2),\n            colorName = _color$toString$trim$2[0],\n            colorModifier = _color$toString$trim$2[1];\n\n        data.class = _objectSpread(_objectSpread({}, data.class), {}, _defineProperty({}, colorName + '--text', true));\n\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true;\n        }\n      }\n\n      return data;\n    }\n  }\n});",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,SAASC,YAAT;AACA,SAASC,UAAT;AAEA,eAAeF,GAAG,CAACG,MAAJ,CAAW;AACxBC,MAAI,EAAE,WADkB;AAGxBC,OAAK,EAAE;AACLC,SAAK,EAAEC;AADF,GAHiB;AAOxBC,SAAO,EAAE;AACPC,sBADO,8BACaH,KADb,EACyD;AAAA,UAApBI,IAAoB,uEAAF,EAAE;;AAC9D,UAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAV,oBAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAGlC;;AACA,eAAOS,IAAP;AACD;;AACD,UAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,oBAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAGlC;;AACA,eAAOS,IAAP;AACD;;AACD,UAAIR,UAAU,CAACI,KAAD,CAAd,EAAuB;AACrBI,YAAI,CAACC,KAAL,mCACKD,IAAI,CAACC,KADV;AAEE,wCAAuBL,KAAvB,CAFF;AAGE,oCAAmBA,KAAnB;AAHF;AADF,aAMO,IAAIA,KAAJ,EAAW;AAChBI,YAAI,CAACE,KAAL,mCACKF,IAAI,CAACE,KADV,2BAEGN,KAFH,EAEW,IAFX;AAID;;AAED,aAAOI,IAAP;AA3BK;AA8BPG,gBA9BO,wBA8BOP,KA9BP,EA8BmD;AAAA,UAApBI,IAAoB,uEAAF,EAAE;;AACxD,UAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAV,oBAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAGlC;;AACA,eAAOS,IAAP;AACD;;AACD,UAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;AAClC;AACAX,oBAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,CAFkC,CAGlC;;AACA,eAAOS,IAAP;AACD;;AACD,UAAIR,UAAU,CAACI,KAAD,CAAd,EAAuB;AACrBI,YAAI,CAACC,KAAL,mCACKD,IAAI,CAACC,KADV;AAEEL,eAAK,YAAKA,KAAL,CAFP;AAGE,mCAAkBA,KAAlB;AAHF;AADF,aAMO,IAAIA,KAAJ,EAAW;AAChB,oCAAmCA,KAAK,CAACQ,QAAN,GAAiBC,IAAjB,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAnC;AAAA;AAAA,YAAOC,SAAP;AAAA,YAAkBC,aAAlB;;AACAR,YAAI,CAACE,KAAL,mCACKF,IAAI,CAACE,KADV,2BAEGK,SAAS,GAAG,QAFf,EAE0B,IAF1B;;AAIA,YAAIC,aAAJ,EAAmB;AACjBR,cAAI,CAACE,KAAL,CAAW,WAAWM,aAAtB,IAAuC,IAAvC;AACD;AACF;;AACD,aAAOR,IAAP;AACD;AA5DM;AAPe,CAAX,CAAf","names":["Vue","consoleError","isCssColor","extend","name","props","color","String","methods","setBackgroundColor","data","style","class","setTextColor","toString","trim","split","colorName","colorModifier"],"sourceRoot":"","sources":["../../../src/mixins/colorable/index.ts"],"sourcesContent":["import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\nimport { isCssColor } from '../../util/colorUtils'\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n"]}]}